apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: "kotlin-kapt"


def buildTime() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMdd')
    return formattedDate
}

kapt {
    generateStubs = true
    arguments {
        arg("androidManifestFile": "$projectDir/src/main/AndroidManifest.xml".toString())
    }
}

android {

    compileSdkVersion 28

    buildToolsVersion "28.0.3"

    defaultConfig {
        applicationId "com.zkteco.zkfingersdkdemo"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName(),
                             "androidManifestFile": "$projectDir/src/main/AndroidManifest.xml".toString()
                ]
            }
        }
    }

    signingConfigs {
        release {
            storeFile file("../signature/expo.jks")
            storePassword '123456'
            keyAlias 'zk'
            keyPassword '123456'
        }

        debug {
            storeFile file("../signature/expo.jks")
            storePassword '123456'
            keyAlias 'zk'
            keyPassword '123456'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        android.applicationVariants.all { variant ->
            def appName
            if (project.hasProperty("applicationName")) {
                appName = applicationName
            } else {
                appName = parent.name
            }
            variant.outputs.all { output ->
                outputFileName = "ZKFingerSDK_"+defaultConfig.versionName+"_${buildTime()}.apk"
            }
        }
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation project(':android-pdf-viewer')
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation "androidx.core:core-ktx:+"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
repositories {
    mavenCentral()
}
